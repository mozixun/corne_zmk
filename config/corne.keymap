/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// dt-formatter: indent = "  "
// dt-formatter: reindentMultilineIntegerCells = "dedent"

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <150>;
      quick-tap-ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  combos {
    compatible = "zmk,combos";

    to0 {
      bindings = <&to 0>;
      key-positions = <11 23 35>;
      slow-release;
      timeout-ms = <50>;
      layers = <0 1 2 3 7 6 5 4>;
    };

    up {
      bindings = <&kp UP>;
      key-positions = <8 20>;
      layers = <0 1 2>;
      timeout-ms = <50>;
    };

    down {
      bindings = <&kp DOWN>;
      key-positions = <20 32>;
      timeout-ms = <50>;
      layers = <0 1 2>;
    };

    righe {
      bindings = <&kp RIGHT_ARROW>;
      key-positions = <20 21>;
      timeout-ms = <50>;
      layers = <0 1 2>;
    };

    left {
      bindings = <&kp LEFT>;
      key-positions = <19 20>;
      layers = <0 1 2>;
      timeout-ms = <50>;
    };

    jietu {
      bindings = <&jietu>;
      key-positions = <35 23>;
      slow-release;
      layers = <0 1 2 3 4 5 6>;
      timeout-ms = <50>;
    };

    lbracket {
      bindings = <&kp LEFT_BRACKET>;
      key-positions = <4 5>;
      timeout-ms = <50>;
      layers = <0 1 2 4 6>;
    };

    rbracket {
      bindings = <&kp RIGHT_BRACKET>;
      key-positions = <6 7>;
      layers = <0 1 2 3 4 6>;
      timeout-ms = <50>;
    };

    lbrace {
      bindings = <&kp LS(LEFT_BRACE)>;
      key-positions = <16 17>;
      layers = <0 1 2 3 4 6>;
      timeout-ms = <50>;
    };

    rbrace {
      bindings = <&kp LS(RIGHT_BRACE)>;
      key-positions = <18 19>;
      layers = <0 1 2 3 6 4>;
      timeout-ms = <50>;
    };

    lpra {
      bindings = <&kp LS(LEFT_PARENTHESIS)>;
      key-positions = <28 29>;
    };

    rpra {
      bindings = <&kp LS(RIGHT_PARENTHESIS)>;
      key-positions = <30 31>;
      layers = <0 1 2 3 4 6>;
      timeout-ms = <50>;
    };

    pipe {
      bindings = <&kp LS(PIPE)>;
      key-positions = <5 6>;
      timeout-ms = <50>;
      layers = <0 1 2 3 4 6>;
    };

    minus {
      bindings = <&kp MINUS>;
      key-positions = <19 20 21>;
      timeout-ms = <50>;
      layers = <0 1 2 3 4 6>;
    };

    under {
      bindings = <&kp LS(UNDERSCORE)>;
      key-positions = <14 15 16>;
      timeout-ms = <50>;
      layers = <0 1 2 3 4 6>;
    };

    slash {
      bindings = <&kp SLASH>;
      key-positions = <18 7>;
      layers = <0 1 2 3 4 6>;
      timeout-ms = <50>;
    };

    blsh {
      bindings = <&kp LS(BACKSLASH)>;
      key-positions = <4 17>;
      layers = <0 1 2 3 4 6>;
      timeout-ms = <50>;
    };

    lthan {
      bindings = <&kp LS(LESS_THAN)>;
      key-positions = <15 16 17>;
      layers = <0 1 2 3 4 6>;
      timeout-ms = <50>;
    };

    rlthan {
      bindings = <&kp LS(GREATER_THAN)>;
      key-positions = <18 19 20>;
      timeout-ms = <50>;
      layers = <0 1 2 3 4 6>;
    };
  };

  macros {
    jietu: jietu {
      compatible = "zmk,behavior-macro";
      label = "JIETU";
      #binding-cells = <0>;
      bindings =
        <&macro_press>,
        <&kp LEFT_SHIFT &kp LEFT_COMMAND>,
        <&macro_tap>,
        <&kp NUMBER_5>,
        <&macro_release>,
        <&kp LEFT_SHIFT &kp LEFT_COMMAND>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    default {
      bindings = <
&kp CAPS          &kp Q  &kp W  &kp E           &kp R      &kp T        &kp Y              &kp U        &kp I              &kp O       &kp P          &kp BACKSPACE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D           &kp F      &kp G        &kp H              &kp J        &kp K              &kp L       &kp SEMICOLON  &kp SQT
&lt 4 TAB         &kp Z  &kp X  &kp C           &kp V      &kp B        &kp N              &kp M        &kp COMMA          &kp PERIOD  &kp SLASH      &kp LEFT_ALT
                                &kp LEFT_SHIFT  &lt 1 ESC  &kp SPACE    &mt RSHIFT RETURN  &lt 2 SPACE  &kp RIGHT_COMMAND
      >;

      label = "DEFAULT";
    };

    symbols {
      bindings = <
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN        &kp HASH   &kp DOLLAR      &kp PERCENT         &kp CARET         &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp MINUS  &kp UNDERSCORE   &kp EQUAL          &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UP_ARROW  &kp COMMA             &kp PERIOD             &kp LEFT_SHIFT
&kp PIPE   &kp COLON        &kp DOUBLE_QUOTES  &kp QMARK  &kp LESS_THAN   &kp GREATER_THAN    &kp SQT           &kp LEFT           &kp DOWN      &kp RIGHT             &kp LEFT_ALT           &kp K_FIND
                                               &to 7      &to 0           &kp RET             &kp SPACE         &mo 3              &to 4
      >;

      label = "SYMBOLS";
    };

    number {
      bindings = <
&trans  &kp AT_SIGN     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL    &kp F1     &kp F2   &kp F3   &kp F4   &kp F5   &none
&trans  &kp MINUS       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS     &kp F6     &kp F7   &kp F8   &kp F9   &kp F10  &none
&trans  &kp UNDERSCORE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp N0       &kp F11    &kp F12  &kp F13  &kp F14  &kp F15  &none
                                         &trans           &mo 4            &kp RET      &kp SPACE  &to 0    &to 7
      >;

      label = "NUMBER";
    };

    system {
      bindings = <
&rgb_ug RGB_TOG                  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&rgb_ug RGB_COLOR_HSB(299,0,99)  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR    &bt BT_CLR    &bt BT_NXT    &bt BT_PRV    &trans        &trans        &trans
&to 1                            &to 2            &to 3            &to 4            &to 5            &to 6              &trans        &trans        &trans        &trans        &trans        &trans
                                                                   &to 7            &trans           &to 0              &trans        &trans        &trans
      >;

      label = "SYSTEM";
    };

    software {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &jietu  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;

      label = "SOFTWARE";
    };

    game {
      bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;

      label = "GAME";
    };

    markdown {
      bindings = <
&trans  &none   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
      >;

      label = "MD";
    };

    locking {
      bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &none  &none  &none
      >;

      label = "LOCKING";
    };
  };
};
